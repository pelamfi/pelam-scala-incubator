apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'maven'

if (Boolean.valueOf(signArtifacts)) {
    println "Artifact signing is on. (scala-macros)"
    apply plugin: 'signing'
}

group = 'fi.pelam'
version = '0.1'
description = """
Pelam's open source utility code incubator and collection.
Separate project for Scala macros. Macros, at least with Gradle,
don't like to be in same source tree as the code using them.
This way I keep open the possibility for utilities that use
a macro as a component.
"""

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.scala-lang:scala-library:2.11.7'
    compile 'org.scala-lang:scala-reflect:2.11.7'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'org.clapper:grizzled-slf4j_2.11:1.0.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.11:2.2.2'
}

if (Boolean.valueOf(signArtifacts)) {
    signing {
        sign configurations.archives
    }
}

// http://stackoverflow.com/a/11475089/1148030
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task scaladocJar(type: Jar, dependsOn: scaladoc) {
    // ScalaDoc is kept in -javadoc jars http://www.scala-lang.org/old/node/12471.html
    classifier = 'javadoc'
    from scaladoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives scaladocJar
}

uploadArchives {
    dependsOn(scaladocJar)
    dependsOn(sourcesJar)
    repositories {
        mavenDeployer {
            pom.project {
                name "Pelam's Scala Utility Incubator Library (Scala Macros)"
                description = project.description
                url "https://github.com/pelamfi/pelam-scala-incubator/blob/master/readme.md"
                inceptionYear 2016
                scm {
                    connection "scm:git:https://github.com/pelamfi/pelam-scala-incubator.git"
                    url "https://github.com/pelamfi/pelam-scala-incubator"
                }
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'pelam'
                        name = 'Peter Lamberg'
                    }
                }
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: "pelam", password: sonatypePassword)
            }
            if (Boolean.valueOf(signArtifacts)) {
                beforeDeployment {
                    MavenDeployment deployment -> signing.signPom(deployment)
                }
            }
        }
    }
}

tasks.withType(ScalaDoc) {
    title = "Pelam's Scala Util Incubator library (Scala macros)"

    scalaDocOptions.additionalParameters = [
            // TODO: convert readme.md to html and feed to scaladoc here? "-doc-root-content", "readme.???",
            "-sourcepath", "${projectDir}/src/main/scala",
            "-doc-source-url", "https://github.com/pelamfi/pelam-scala-incubator/blob/master/scala-macros/src/main/scalaâ‚¬{FILE_PATH}.scala"]
}
